<% // Realized Elements %>
<%
String outputFolder = ctx.getValue("outputFolder").toString();
String projectName = ctx.getValue("projectName").toString();
Collection<String> allocations = CapellaElementService.getOutGoingAllocation(element, projectName, outputFolder);
if(allocations.size() > 0) {%>
<h2>Realized Elements</h2>

<%=StringUtil.stringListToBulette(allocations)%>

<%}%>

<% // Realizing Elements %>
<%
//String outputFolder = ctx.getValue("outputFolder").toString();
//String projectName = ctx.getValue("projectName").toString();
Collection<String> allocations2 = CapellaElementService.getIncomingAllocation(element, projectName, outputFolder);
if(allocations2.size() > 0) {%>
<h2>Realizing Elements </h2>

<%=StringUtil.stringListToBulette(allocations2)%>

<%}%>

<% // owned diagrams%>
<%@ egf:patternCall patternId="platform:/plugin/org.polarsys.capella.docgen/egf/HTMLDocGenCapella.fcore#LogicalName=org.polarsys.capella.docgen.foundations.DiagramsGeneration" args="element:element"%>

<%if (parameter.getOwnedTransitions() != null && parameter.getOwnedTransitions().size() > 0){%>
<h2>Owned Transitions</h2>
<table max-width="screen.width">
   <thead> 
       <tr>
           <th>Transition</th>
           <th>Source</th>
           <th>Target</th>
           <th>Trigger</th>
           <th>Effect</th>
           <th>Description</th>
       </tr>
   </thead>
   <tbody>
<%      for (StateTransition transition : parameter.getOwnedTransitions()) 
		{
			String triggerName = "";
			EList<AbstractEvent> triggers = transition.getTriggers();
			if (triggers != null && ! triggers.isEmpty())
			{
				triggerName = triggers.get(0).getName();
				for (int i = 1; i < triggers.size(); i++) {
					triggerName += ", " + triggers.get(i).getName();
				}
			}
			
			String guard = "";
			
			// FIXME: (Old code) Keep until migration validation
			//guard = ( transition.getGuard() != null && transition.getGuard().length() > 0 ? "["+transition.getGuard()+"]" : "");
			// New code
			Constraint constraint = transition.getGuard();
			if (constraint != null && constraint.getName() != null)
			{
				String guardName = CapellaEmbeddedLinkedTextEditorInput.getDefaultText(constraint);
				guard = guardName != null ? "[" + guardName + "]" : "";
			}
			
			EList<AbstractEvent> effects = transition.getEffect();
			String trans_effect = "";
			for (AbstractEvent abstractEvent : effects) 
			{
				trans_effect += abstractEvent.getName();
				if (effects.indexOf(abstractEvent) != effects.size())
				{
					trans_effect += ", ";
				}
			}
			
			if (! trans_effect.isEmpty() && effects.size() > 1)
			{
				trans_effect = "(" + trans_effect + ")";
			}
			
			// String trans_effect = (transition.getEffect() != null ? transition.getEffect().getName() : "");
			
			String trans_label = (triggerName.trim().length() > 0 ? triggerName : transition.getTriggerDescription()) + " " + guard+
				( trans_effect.trim().length() > 0 ? " / " + trans_effect : "");
			
			String trans_source = (transition.getSource() != null ? transition.getSource().getName() : "");
			
			String trans_target = (transition.getTarget() != null ? transition.getTarget().getName() : "");
			
			String trans_description = "";
			
			if (transition instanceof StateTransition){
				StateTransition tt = (StateTransition) transition;
				trans_description = tt.getDescription();
				trans_description = StringUtil.transformAREFString(transition, trans_description, projectName, outputFolder);
			}%>
	   <tr>
           <td><%=trans_label%></td>
           <td><%=trans_source%></td>
           <td><%=trans_target%></td>
           <td><%=triggerName%></td>
           <td><%=trans_effect%></td>
           <td><%=trans_description%></td>
       </tr>
		<%}%>
<%}%>

</div>